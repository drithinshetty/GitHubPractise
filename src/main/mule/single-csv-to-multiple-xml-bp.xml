<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
	<flow name="single-csv-to-multiple-xml-bpFlow" doc:id="150b968e-f870-46ac-ac9d-85fc3e5038e7" initialState="stopped">
		<scheduler doc:name="Scheduler" doc:id="cb3b7df5-939c-4fca-905e-56dc557b490d" >
			<scheduling-strategy >
				<fixed-frequency frequency="1" timeUnit="MINUTES"/>
			</scheduling-strategy>
		</scheduler>
		<file:read doc:name="Read" doc:id="443b2778-4af1-4791-8818-0a73ec4e2fe9" path="D:\mule-files\task2\input\MOCK_DATA.csv"/>
		<ee:transform doc:name="Transform Message" doc:id="c47f9dcd-161c-4025-aa17-e9eca8c240f4">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map(data,index)->{
			id: data.id,
			name: data.first_name ++ " " ++ data.last_name,
			email : data.email,
			gender : data.gender
			}
		
]]></ee:set-payload>
						</ee:message>
					</ee:transform>
		<batch:job jobName="single-csv-to-multiple-xml-bpBatch_Job" doc:id="45534014-a445-4ec5-9cc8-d203ca3f8173" >
			<batch:process-records >
				<batch:step name="Batch_Step" doc:id="5a934494-3b39-47e6-b60d-adb20a9c768b" >
					<ee:transform doc:name="Transform Message" doc:id="0f8d4616-7a0d-4781-b5eb-f15a43aa516a">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/xml
---
{
	employees :{
		employee:{
			id: payload.id,
			name: payload.name,
			email : payload.email,
			gender : payload.gender}
			}
}
]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					<file:write doc:name="Write" doc:id="e15c425a-c185-4677-a433-27c6b327edf4" path="#[&quot;D:\mule-files\task2\output\MyFile&quot; ++ (now() as String {format :'dd-mm-yy-hh-mm-ss'})++(random()*1000) ++ '.xml']" />
				</batch:step>
			</batch:process-records>
			<batch:on-complete >
				<logger level="INFO" doc:name="Logger" doc:id="21faaed3-141f-4791-bcbe-7ec56075c078" message="Completed"/>
			</batch:on-complete>
		</batch:job>
	</flow>
	<flow name="Copy_of_single-csv-to-multiple-xml-bpFlow" doc:id="f227b6f9-0840-4a7d-942d-51680ba76954" >
		<scheduler doc:name="Copy_of_Scheduler" doc:id="cb1e3484-fb4e-4982-bc35-97ca93557db6" >
			<scheduling-strategy >
				<fixed-frequency frequency="1" timeUnit="MINUTES" />
			</scheduling-strategy>
		</scheduler>
		<file:read doc:name="Copy_of_Read" doc:id="84f005bf-01fd-4e0e-b45c-99ea8db5e110" path="D:\mule-files\task2\input\MOCK_DATA.csv" />
		<foreach doc:name="For Each" doc:id="d73c0397-b266-442c-9059-f065ff79c403" >
			<ee:transform doc:name="Copy_of_Transform Message" doc:id="c20798f3-b92c-4a2e-a4d9-e6ef160576fc">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/xml
---
{
	employees :{(payload map(data,index)->{
		employee:{
			id: data.id,
			name: data.first_name ++ " " ++ data.last_name,
			email : data.email,
			gender : data.gender}
			})
		}
}
]]></ee:set-payload>
						</ee:message>
					</ee:transform>
			<file:write doc:name="Write" doc:id="4509757b-7ec6-4245-8e3c-501610349ef9" path="#[&quot;D:\mule-filesask2\output\MyFiles&quot; ++ (now() as String{format:'dd-mm-yyyy-hh-mm-ss'}) ++ (random()*1000) ++ &quot;.xml&quot;]"/>
		</foreach>
	</flow>
</mule>
